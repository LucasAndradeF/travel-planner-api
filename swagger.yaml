openapi: 3.0.0
info:
  title: API de Gerenciamento de Viagens
  version: 1.0.0
  description: Esta API permite o cadastro e login de usuários, além do gerenciamento de planos de viagem, e integrações para busca de informações de CEP, cotação de moedas e gerenciamento de países/moedas.
servers:
  - url: http://127.0.0.1:8000/
    description: Servidor de Desenvolvimento Local
security:
  - bearerAuth: []
paths:
  /api/auth/signup/:
    post:
      summary: Cadastro de Usuário
      operationId: createUser
      description: Permite que novos usuários se registrem no sistema.
      tags:
        - Autenticação
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
              properties:
                username:
                  type: string
                  description: Nome de usuário único para o novo usuário.
                  example: seu_nome_de_usuario
                email:
                  type: string
                  format: email
                  description: Endereço de e-mail único para o novo usuário.
                  example: seu_email@example.com
                password:
                  type: string
                  format: password
                  description: Senha do usuário.
                  example: sua_senha_segura
      responses:
        "201":
          description: Usuário criado com sucesso.
          content:
            application/json:
              schema:
                type: string
                example: "Usuario criado com sucesso!"
        "400":
          description: Dados de requisição inválidos.
          content:
            application/json:
              schema:
                type: object
                properties:
                  field_name:
                    type: array
                    items:
                      type: string
                    example: ["Mensagem de erro específica."]
  /api/auth/login/:
    post:
      summary: Login de Usuário
      operationId: loginUser
      description: Permite que usuários existentes façam login para obter tokens de acesso JWT.
      tags:
        - Autenticação
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  description: Nome de usuário do usuário existente.
                  example: seu_nome_de_usuario
                password:
                  type: string
                  format: password
                  description: Senha do usuário.
                  example: sua_senha
      responses:
        "200":
          description: Login bem-sucedido. Retorna tokens de acesso e refresh.
          content:
            application/json:
              schema:
                type: object
                properties:
                  refresh:
                    type: string
                    description: Token usado para obter um novo access token quando o atual expirar.
                    example: seu_token_refresh_jwt
                  access:
                    type: string
                    description: Token de acesso usado para autenticar requisições em endpoints protegidos.
                    example: seu_token_de_acesso_jwt
        "401":
          description: Credenciais inválidas (username ou senha incorretos).
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: No active account found with the given credentials
  /api/auth/me/:
    get:
      summary: Obter Perfil do Usuário Logado
      operationId: getMyProfile
      description: Retorna os dados do usuário autenticado.
      tags:
        - Autenticação
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Dados do usuário.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    readOnly: true
                  username:
                    type: string
                  email:
                    type: string
                    format: email
                  date_joined:
                    type: string
                    format: date-time
        "401":
          description: Autenticação necessária ou token inválido/expirado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/auth/delete/:
    delete:
      summary: Excluir Conta do Usuário
      operationId: deleteMyAccount
      description: Exclui a conta do usuário autenticado. Requer a senha para confirmação.
      tags:
        - Autenticação
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - password
              properties:
                password:
                  type: string
                  format: password
                  description: Senha do usuário para confirmação da exclusão.
      responses:
        "204":
          description: Usuário excluído com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Usuário excluído com sucesso.
        "400":
          description: Senha inválida.
          content:
            application/json:
              schema:
                type: object
                properties:
                  non_field_errors:
                    type: array
                    items:
                      type: string
                    example: ["Senha invalida"]
        "401":
          description: Autenticação necessária ou token inválido/expirado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/trip-plans/:
    get:
      summary: Lista Planos de Viagem
      operationId: listTripPlans
      description: Retorna uma lista de todos os planos de viagem existentes para o usuário autenticado.
      tags:
        - Planos de Viagem
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Lista de planos de viagem.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TripPlanRead"
        "401":
          description: Autenticação necessária.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      summary: Cria Plano de Viagem
      operationId: createTripPlan
      description: Cria um novo plano de viagem. O sistema buscará automaticamente o endereço de origem com base no cep_origem e a cotação da moeda com base no destino.
      tags:
        - Planos de Viagem
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TripPlanCreate"
      responses:
        "201":
          description: Plano de viagem criado com sucesso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TripPlanRead"
        "400":
          description: Dados de requisição inválidos ou CEP/País não encontrado/inválido.
          content:
            application/json:
              schema:
                type: object
                properties:
                  field_name:
                    type: array
                    items:
                      type: string
                    example: ["CEP inválido ou não encontrado."]
        "401":
          description: Autenticação necessária.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/trip-plans/{id}/:
    get:
      summary: Detalhes do Plano de Viagem
      operationId: getTripPlanDetails
      description: Recupera os detalhes de um plano de viagem específico.
      tags:
        - Planos de Viagem
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: O ID único do plano de viagem.
      responses:
        "200":
          description: Detalhes do plano de viagem.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TripPlanRead"
        "401":
          description: Autenticação necessária.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Plano de viagem não encontrado.
    put:
      summary: Atualiza Plano de Viagem (Completo)
      operationId: updateTripPlanFull
      description: Atualiza completamente um plano de viagem existente.
      tags:
        - Planos de Viagem
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: O ID único do plano de viagem.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TripPlanCreate"
      responses:
        "200":
          description: Plano de viagem atualizado com sucesso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TripPlanRead"
        "400":
          description: Dados de requisição inválidos.
          content:
            application/json:
              schema:
                type: object
                properties:
                  field_name:
                    type: array
                    items:
                      type: string
        "401":
          description: Autenticação necessária.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Plano de viagem não encontrado.
    patch:
      summary: Atualiza Plano de Viagem (Parcial)
      operationId: updateTripPlanPartial
      description: Atualiza parcialmente um plano de viagem existente.
      tags:
        - Planos de Viagem
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: O ID único do plano de viagem.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TripPlanCreate"
      responses:
        "200":
          description: Plano de viagem atualizado com sucesso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TripPlanRead"
        "400":
          description: Dados de requisição inválidos.
          content:
            application/json:
              schema:
                type: object
                properties:
                  field_name:
                    type: array
                    items:
                      type: string
        "401":
          description: Autenticação necessária.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Plano de viagem não encontrado.
    delete:
      summary: Exclui Plano de Viagem
      operationId: deleteTripPlan
      description: Exclui um plano de viagem existente.
      tags:
        - Planos de Viagem
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: O ID único do plano de viagem.
      responses:
        "204":
          description: Plano de viagem excluído com sucesso.
        "401":
          description: Autenticação necessária.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Plano de viagem não encontrado.
  /api/integrations/cep/{cep}/:
    get:
      summary: Buscar Endereço por CEP
      operationId: getAddressByCep
      description: Busca informações de endereço (cidade, estado) utilizando um CEP.
      tags:
        - Integrações
      parameters:
        - name: cep
          in: path
          required: true
          schema:
            type: string
            pattern: '^\d{8}$'
          description: O CEP a ser pesquisado (apenas números).
          example: "87050000"
      responses:
        "200":
          description: Endereço encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  cidade:
                    type: string
                    example: "Maringá"
                  estado:
                    type: string
                    example: "Paraná"
        "400":
          description: CEP inválido ou não encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "CEP inválido ou não encontrado."
  /api/integrations/moeda/{moeda}/:
    get:
      summary: Buscar Cotação de Moeda
      operationId: getCurrencyExchangeRate
      description: Busca a cotação de uma moeda em relação ao Real Brasileiro (BRL).
      tags:
        - Integrações
      parameters:
        - name: moeda
          in: path
          required: true
          schema:
            type: string
            pattern: "^[A-Z]{3}$"
            description: O código ISO da moeda a ser pesquisada (ex. USD, EUR).
          example: "USD"
      responses:
        "200":
          description: Cotação encontrada.
          content:
            application/json:
              schema:
                type: object
                properties:
                  moeda:
                    type: string
                    example: "USD"
                  cotacao:
                    type: string
                    example: "5.20"
                  nome:
                    type: string
                    example: "Dólar Americano/Real Brasileiro"
        "400":
          description: Moeda inválida ou não encontrada.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Moeda inválida ou não encontrada."
  /api/integrations/pais/{pais}/:
    get:
      summary: Buscar Moeda por País
      operationId: getCurrencyByCountry
      description: Busca o código ISO da moeda de um país.
      tags:
        - Integrações
      parameters:
        - name: pais
          in: path
          required: true
          schema:
            type: string
            description: O nome do país (ex. Estados Unidos, França).
          example: "Estados Unidos"
      responses:
        "200":
          description: Moeda do país encontrada.
          content:
            application/json:
              schema:
                type: string
                example: "USD" # Retorna apenas o código ISO da moeda
        "400":
          description: País inválido ou não encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "País inválido ou não encontrado."
  /api/currencies/countries/:
    get:
      summary: Listar Países e Moedas
      operationId: listCurrencies
      description: Retorna uma lista de todos os países e suas respectivas moedas registradas.
      tags:
        - Moedas
      responses:
        "200":
          description: Lista de países e moedas.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Currency"
    post:
      summary: Criar País e Moeda
      operationId: createCurrency
      description: Cria um novo registro de país e sua moeda.
      tags:
        - Moedas
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Currency"
      responses:
        "201":
          description: País e moeda criados com sucesso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Currency"
        "400":
          description: Dados de requisição inválidos.
          content:
            application/json:
              schema:
                type: object
                properties:
                  field_name:
                    type: array
                    items:
                      type: string
                    example: ["Este campo é obrigatório."]
  /api/currencies/countries/{id}/:
    get:
      summary: Detalhes de País e Moeda
      operationId: getCurrencyDetails
      description: Retorna os detalhes de um registro específico de país e moeda.
      tags:
        - Moedas
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: O ID do registro de país e moeda.
      responses:
        "200":
          description: Detalhes do país e moeda.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Currency"
        "404":
          description: Registro não encontrado.
    put:
      summary: Atualizar País e Moeda (Completo)
      operationId: updateCurrencyFull
      description: Atualiza completamente um registro existente de país e moeda.
      tags:
        - Moedas
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: O ID do registro de país e moeda.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Currency"
      responses:
        "200":
          description: Registro atualizado com sucesso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Currency"
        "400":
          description: Dados de requisição inválidos.
          content:
            application/json:
              schema:
                type: object
                properties:
                  field_name:
                    type: array
                    items:
                      type: string
        "404":
          description: Registro não encontrado.
    patch:
      summary: Atualizar País e Moeda (Parcial)
      operationId: updateCurrencyPartial
      description: Atualiza parcialmente um registro existente de país e moeda.
      tags:
        - Moedas
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: O ID do registro de país e moeda.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Currency"
      responses:
        "200":
          description: Registro atualizado com sucesso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Currency"
        "400":
          description: Dados de requisição inválidos.
          content:
            application/json:
              schema:
                type: object
                properties:
                  field_name:
                    type: array
                    items:
                      type: string
        "404":
          description: Registro não encontrado.
    delete:
      summary: Excluir País e Moeda
      operationId: deleteCurrency
      description: Exclui um registro existente de país e moeda.
      tags:
        - Moedas
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: O ID do registro de país e moeda.
      responses:
        "204":
          description: Registro excluído com sucesso.
        "404":
          description: Registro não encontrado.
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    TripPlanCreate:
      type: object
      required:
        - cep_origem
        - data_ida
        - orcamento
        - destino
      properties:
        cep_origem:
          type: string
          maxLength: 8
          description: CEP de origem da viagem.
          example: "87050000"
        data_ida:
          type: string
          format: date
          description: Data de ida da viagem (formato `YYYY-MM-DD`).
          example: "2025-12-25"
        orcamento:
          type: string # Em OpenAPI, decimais podem ser representados como string para precisão.
          format: decimal
          description: Orçamento disponível para a viagem (até 10 dígitos, 2 casas decimais).
          example: "1500.00"
        destino:
          type: string
          maxLength: 100
          description: País de destino da viagem.
          example: "Estados Unidos"
    TripPlanRead:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Identificador único do plano de viagem.
          readOnly: true
        user:
          type: string
          format: uuid
          description: O usuário associado a este plano de viagem.
          readOnly: true
        cep_origem:
          type: string
          maxLength: 8
          description: CEP de origem da viagem.
          example: "87050000"
        origem_cidade:
          type: string
          maxLength: 150
          description: Cidade de origem.
          readOnly: true
        origem_estado:
          type: string
          maxLength: 150
          description: Estado de origem.
          readOnly: true
        data_ida:
          type: string
          format: date
          description: Data de ida da viagem.
          example: "2025-12-25"
        orcamento:
          type: string
          format: decimal
          description: Orçamento para a viagem.
          example: "1500.00"
        moeda_destino:
          type: string
          maxLength: 10
          description: Código da moeda do destino.
          readOnly: true
        cotacao:
          type: object
          description: Detalhes da cotação da moeda do destino.
          properties:
            moeda:
              type: string
              example: "USD"
            cotacao:
              type: string
              example: "5.20"
            nome:
              type: string
              example: "Dólar Americano/Real Brasileiro"
          readOnly: true
        data_criacao:
          type: string
          format: date-time
          description: Data e hora de criação do plano de viagem.
          readOnly: true
        destino:
          type: string
          maxLength: 100
          description: Destino da viagem.
          example: "Estados Unidos"
    Currency:
      type: object
      required:
        - pais
        - moeda
        - codigo_iso
      properties:
        id:
          type: integer
          readOnly: true
          description: ID do registro da moeda.
        pais:
          type: string
          maxLength: 255
          description: Nome do país.
          example: "Estados Unidos"
        moeda:
          type: string
          maxLength: 255
          description: Nome da moeda.
          example: "Dólar Americano"
        codigo_iso:
          type: string
          maxLength: 3
          description: Código ISO da moeda (ex. USD).
          example: "USD"
    ErrorResponse:
      type: object
      properties:
        detail:
          type: string
          description: Mensagem de erro.
          example: "Authentication credentials were not provided."
